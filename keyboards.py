from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import Optional

main_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üîÆ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã", callback_data="answers"),
            InlineKeyboardButton(text="‚úÖ/‚ùå –î–∞/–Ω–µ—Ç", callback_data="yes_no"),
        ],
        [
            InlineKeyboardButton(
                text="üåÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å", callback_data="prediction"
            )
        ],
        [
            InlineKeyboardButton(
                text="üíë –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å", callback_data="compatibility"
            ),
            InlineKeyboardButton(
                text="‚öñÔ∏è –ü–ª–æ—Ö–∏–µ/—Ö–æ—Ä–æ—à–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞", callback_data="qualities"
            ),
        ],
    ]
)


def get_zodiac_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞"""
    zodiac_signs = [
        ("‚ôà –û–≤–µ–Ω", "zodiac_aries"),
        ("‚ôâ –¢–µ–ª–µ—Ü", "zodiac_taurus"),
        ("‚ôä –ë–ª–∏–∑–Ω–µ—Ü—ã", "zodiac_gemini"),
        ("‚ôã –†–∞–∫", "zodiac_cancer"),
        ("‚ôå –õ–µ–≤", "zodiac_leo"),
        ("‚ôç –î–µ–≤–∞", "zodiac_virgo"),
        ("‚ôé –í–µ—Å—ã", "zodiac_libra"),
        ("‚ôè –°–∫–æ—Ä–ø–∏–æ–Ω", "zodiac_scorpio"),
        ("‚ôê –°—Ç—Ä–µ–ª–µ—Ü", "zodiac_sagittarius"),
        ("‚ôë –ö–æ–∑–µ—Ä–æ–≥", "zodiac_capricorn"),
        ("‚ôí –í–æ–¥–æ–ª–µ–π", "zodiac_aquarius"),
        ("‚ôì –†—ã–±—ã", "zodiac_pisces"),
    ]
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É 3x4 (3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É, 4 —Ä—è–¥–∞)
    keyboard = []
    for i in range(0, len(zodiac_signs), 3):
        row = []
        for j in range(3):
            if i + j < len(zodiac_signs):
                text, callback_data = zodiac_signs[i + j]
                row.append(InlineKeyboardButton(text=text, callback_data=callback_data))
        keyboard.append(row)
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_name_keyboard(username: str, full_name: Optional[str] = None) -> InlineKeyboardMarkup:
    keyboard = []

    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: –Ω–∏–∫–Ω–µ–π–º
    if username and full_name and full_name != username:
        keyboard.append(
            [
                InlineKeyboardButton(
                    text=f"@{username}", callback_data=f"name_{username}"
                ),
                InlineKeyboardButton(text=full_name, callback_data=f"name_{full_name}"),
            ]
        )
    else:
        if username:
            keyboard.append(
                [
                    InlineKeyboardButton(
                        text=f"@{username}", callback_data=f"name_{username}"
                    )
                ]
            )
        # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –ø–æ–ª–Ω–æ–µ –∏–º—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
        elif full_name and full_name != username:
            keyboard.append(
                [
                    InlineKeyboardButton(
                        text=full_name, callback_data=f"name_{full_name}"
                    )
                ]
            )

    # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞: –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
    keyboard.append(
        [InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="name_skip")]
    )

    return InlineKeyboardMarkup(inline_keyboard=keyboard)
